{"version":3,"sources":["video/Насте.mp4","images/ira.jpg","images/nastya.jpg","images/olesya.jpg","images/julia.jpg","images/rita.jpg","images/nastya30.jpg","images/vika.jpg","video/Поздравление.mp4","video/Ире.mp4","video/Олесе.mp4","data.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","name","video","App","useState","active","setActive","className","src","mainVideo","controls","data","map","item","image","ira","iraV","nastya","nastyaV","olesya","olesyaV","juliya","juliyaV","rita","ritaV","nastya30","nastya30V","vika","vikaV","autoPlay","alt","onClick","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.db20ff1b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Насте.229089d9.mp4\";","module.exports = __webpack_public_path__ + \"static/media/ira.2d69fd01.jpg\";","module.exports = __webpack_public_path__ + \"static/media/nastya.f6607762.jpg\";","module.exports = __webpack_public_path__ + \"static/media/olesya.30ad2ffa.jpg\";","module.exports = __webpack_public_path__ + \"static/media/julia.e7a7d252.jpg\";","module.exports = __webpack_public_path__ + \"static/media/rita.8e9a27ca.jpg\";","module.exports = __webpack_public_path__ + \"static/media/nastya30.5e9dc137.jpg\";","module.exports = __webpack_public_path__ + \"static/media/vika.3dbc419d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Поздравление.919e1847.mp4\";","module.exports = __webpack_public_path__ + \"static/media/Ире.1a9e4b64.mp4\";","module.exports = __webpack_public_path__ + \"static/media/Олесе.1f41d399.mp4\";","export default [\n    {\n        name: 'ira',\n        video: 'https://www.youtube.com/embed/E1UVxaWf7Zs',\n    },\n    {\n        name: 'nastya',\n        video: 'https://www.youtube.com/embed/cq3xlBvRoK4',\n    },\n    {\n        name: 'olesya',\n        video: 'https://www.youtube.com/embed/KCGXTCcE08M',\n    },\n    {\n        name: 'juliya',\n        video: 'https://www.youtube.com/embed/hY7m5jjJ9mM',\n    },\n    {\n        name: 'rita',\n        video: 'https://www.youtube.com/embed/hY7m5jjJ9mM',\n    },\n    {\n        name: 'nastya30',\n        video: 'https://www.youtube.com/embed/hY7m5jjJ9mM',\n    },\n    {\n        name: 'vika',\n        video: 'https://www.youtube.com/embed/hY7m5jjJ9mM',\n    },\n];\n","import React, { useState } from 'react';\n\nimport ira from './images/ira.jpg';\nimport nastya from './images/nastya.jpg';\nimport olesya from './images/olesya.jpg';\nimport juliya from './images/julia.jpg';\nimport rita from './images/rita.jpg';\nimport nastya30 from './images/nastya30.jpg';\nimport vika from './images/vika.jpg';\n\nimport mainVideo from './video/Поздравление.mp4';\n\nimport iraV from './video/Ире.mp4';\nimport olesyaV from './video/Олесе.mp4';\nimport nastyaV from './video/Насте.mp4';\nimport juliyaV from './video/Насте.mp4';\nimport ritaV from './video/Насте.mp4';\nimport nastya30V from './video/Насте.mp4';\nimport vikaV from './video/Насте.mp4';\n\nimport './App.css';\nimport data from './data';\n\nfunction App() {\n    const [active, setActive] = useState('');\n\n    return (\n        <div>\n            <h1>Новогоднее обращение предводителя</h1>\n            <div className=\"main-video\">\n                <video src={mainVideo} controls></video>\n            </div>\n            <h2>Ищи себя и получай стих в подарок</h2>\n            <div className=\"app\">\n                {data.map(item => {\n                    let image;\n                    let video;\n\n                    switch (item.name) {\n                        case 'ira':\n                            image = ira;\n                            video = iraV;\n                            break;\n                        case 'nastya':\n                            image = nastya;\n                            video = nastyaV;\n                            break;\n                        case 'olesya':\n                            image = olesya;\n                            video = olesyaV;\n                            break;\n                        case 'juliya':\n                            image = juliya;\n                            video = juliyaV;\n                            break;\n                        case 'rita':\n                            image = rita;\n                            video = ritaV;\n                            break;\n                        case 'nastya30':\n                            image = nastya30;\n                            video = nastya30V;\n\n                            break;\n                        default:\n                            image = vika;\n                            video = vikaV;\n                    }\n\n                    return (\n                        <div className=\"item\">\n                            {active === item.name ? (\n                                <video src={video} controls autoPlay></video>\n                            ) : (\n                                <img\n                                    src={image}\n                                    className=\"App-logo\"\n                                    alt=\"logo\"\n                                    onClick={() => setActive(item.name)}\n                                />\n                            )}{' '}\n                        </div>\n                    );\n                })}\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}